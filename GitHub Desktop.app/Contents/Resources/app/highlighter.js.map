{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/node_modules/codemirror/addon/runmode/runmode.node.js","webpack:///./app/src/highlighter/index.ts"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","__webpack_require__","exports","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","p","all","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","countColumn","string","end","tabSize","startIndex","startValue","search","nextTab","indexOf","StringStream","context","this","pos","start","lastColumnPos","lastColumnValue","lineStart","eol","sol","peek","charAt","undefined","next","eat","match","ch","ok","test","eatWhile","eatSpace","skipToEnd","skipTo","found","backUp","column","indentation","pattern","consume","caseInsensitive","slice","index","cased","str","toLowerCase","substr","current","hideFirstChars","inner","lookAhead","line","lines","startState","a1","a2","modes","mimeModes","defineMode","arguments","dependencies","Array","defineMIME","mime","spec","token","stream","resolveMode","modeExtensions","extendMode","properties","obj","target","overwrite","prop","copyObj","getMode","options","mfactory","modeObj","exts","helperType","modeProps","innerMode","state","info","registerHelper","registerGlobalHelper","Math","min","runMode","modespec","callback","indentUnit","split","splitLines","blankLine","style","extensionModes","install","mappings","extensionMIMEMap","Map","basenameModes","dockerfile","basenameMIMEMap","mimeModeMap","extensionMode","mapping","mimeType","entries","set","basenameMode","getModeName","getInnerModeName","readToken","addModeClass","innerModeName","Error","onmessage","async","request","ev","data","contents","extension","basename","startsWith","exec","guessMimeType","modeDefinition","detectMode","postMessage","lineFilter","Set","maxLine","max","tokens","ix","has","lineCtx","lineStream"],"mappings":"aAAEA,KAAmB,aAAI,SAA8BC,EAAUC,GAC9D,IAAI,IAAIC,KAAYD,EACnBE,EAAQD,GAAYD,EAAYC,GAEjC,KAAMF,EAASI,QACdC,EAAgBL,EAASM,OAAS,GAIpC,IAAIC,EAAmB,GAInBF,EAAkB,CACrB,YAAe,GAIhB,SAASG,EAAoBN,GAG5B,GAAGK,EAAiBL,GACnB,OAAOK,EAAiBL,GAAUO,QAGnC,IAAIC,EAASH,EAAiBL,GAAY,CACzCS,EAAGT,EACHU,GAAG,EACHH,QAAS,IAUV,OANAN,EAAQD,GAAUW,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASD,GAG/DE,EAAOE,GAAI,EAGJF,EAAOD,QAKfD,EAAoBM,EAAI,SAAuBC,GAC9C,IAAIC,EAAW,GAOf,OANAA,EAASC,KAAKC,QAAQC,UAAUC,MAAK,WAEhCf,EAAgBU,IACnBM,cAAcb,EAAoBc,EAAI,gBAAkB,CAAC,OAAS,SAAS,kBAAkB,kBAAkB,cAAc,cAAc,YAAY,YAAY,WAAW,WAAW,YAAY,YAAY,aAAa,aAAa,kBAAkB,kBAAkB,aAAa,aAAa,eAAe,eAAe,oBAAoB,oBAAoB,eAAe,eAAe,WAAW,WAAW,cAAc,cAAc,eAAe,eAAe,UAAU,UAAU,YAAY,YAAY,kBAAkB,kBAAkB,aAAa,aAAa,WAAW,WAAW,cAAc,cAAc,UAAU,UAAU,cAAc,cAAc,YAAY,YAAY,WAAW,WAAW,kBAAkB,kBAAkB,kBAAkB,kBAAkB,gBAAgB,gBAAgB,cAAc,cAAc,SAAS,SAAS,SAAS,SAAS,WAAW,WAAW,YAAY,YAAY,cAAc,cAAc,aAAa,aAAa,aAAa,aAAa,iBAAiB,iBAAiB,cAAc,cAAc,WAAW,WAAW,cAAc,cAAc,aAAa,aAAa,UAAU,UAAU,WAAW,WAAW,gBAAgB,gBAAgB,iBAAiB,iBAAiB,WAAW,WAAW,kBAAkB,kBAAkB,YAAY,YAAY,WAAW,WAAW,oBAAoB,oBAAoB,WAAW,WAAW,YAAY,YAAY,WAAW,WAAW,WAAW,WAAW,YAAY,aAAaP,IAAUA,GAAW,WAGtgDG,QAAQK,IAAIP,IAIpBR,EAAoBgB,EAAIrB,EAGxBK,EAAoBiB,EAAIlB,EAGxBC,EAAoBkB,EAAI,SAASjB,EAASkB,EAAMC,GAC3CpB,EAAoBqB,EAAEpB,EAASkB,IAClCG,OAAOC,eAAetB,EAASkB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEpB,EAAoB0B,EAAI,SAASzB,GACX,oBAAX0B,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAetB,EAAS0B,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAetB,EAAS,aAAc,CAAE4B,OAAO,KAQvD7B,EAAoB8B,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQ7B,EAAoB6B,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAlC,EAAoB0B,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAO7B,EAAoBkB,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRjC,EAAoBqC,EAAI,SAASnC,GAChC,IAAIkB,EAASlB,GAAUA,EAAO8B,WAC7B,WAAwB,OAAO9B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAF,EAAoBkB,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRpB,EAAoBqB,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAepC,KAAKiC,EAAQC,IAGzGvC,EAAoBc,EAAI,GAIjBd,EAAoBA,EAAoB0C,EAAI,G,kBCnGrD,IAAIC,EAAc1C,EAAQ0C,YAAc,SAASC,EAAQC,EAAKC,EAASC,EAAYC,GACtE,MAAPH,IAEU,IADZA,EAAMD,EAAOK,OAAO,kBACLJ,EAAMD,EAAOhD,QAE9B,IAAK,IAAIO,EAAI4C,GAAc,EAAGV,EAAIW,GAAc,IAAK,CACnD,IAAIE,EAAUN,EAAOO,QAAQ,KAAMhD,GACnC,GAAI+C,EAAU,GAAKA,GAAWL,EAC5B,OAAOR,GAAKQ,EAAM1C,GACpBkC,GAAKa,EAAU/C,EACfkC,GAAKS,EAAWT,EAAIS,EACpB3C,EAAI+C,EAAU,IAIlB,SAASE,EAAaR,EAAQE,EAASO,GACrCC,KAAKC,IAAMD,KAAKE,MAAQ,EACxBF,KAAKV,OAASA,EACdU,KAAKR,QAAUA,GAAW,EAC1BQ,KAAKG,cAAgBH,KAAKI,gBAAkB,EAC5CJ,KAAKK,UAAY,EACjBL,KAAKD,QAAUA,EAGjBD,EAAaZ,UAAY,CACvBoB,IAAK,WAAY,OAAON,KAAKC,KAAOD,KAAKV,OAAOhD,QAChDiE,IAAK,WAAY,OAAOP,KAAKC,KAAOD,KAAKK,WACzCG,KAAM,WAAY,OAAOR,KAAKV,OAAOmB,OAAOT,KAAKC,WAAQS,GACzDC,KAAM,WACJ,GAAIX,KAAKC,IAAMD,KAAKV,OAAOhD,OACzB,OAAO0D,KAAKV,OAAOmB,OAAOT,KAAKC,QAEnCW,IAAK,SAASC,GACZ,IAAIC,EAAKd,KAAKV,OAAOmB,OAAOT,KAAKC,KACjC,GAAoB,iBAATY,EAAmB,IAAIE,EAAKD,GAAMD,OACpCE,EAAKD,IAAOD,EAAMG,KAAOH,EAAMG,KAAKF,GAAMD,EAAMC,IACzD,GAAIC,EAAiB,QAAVf,KAAKC,IAAYa,GAE9BG,SAAU,SAASJ,GAEjB,IADA,IAAIX,EAAQF,KAAKC,IACVD,KAAKY,IAAIC,KAChB,OAAOb,KAAKC,IAAMC,GAEpBgB,SAAU,WAER,IADA,IAAIhB,EAAQF,KAAKC,IACV,aAAae,KAAKhB,KAAKV,OAAOmB,OAAOT,KAAKC,SAASD,KAAKC,IAC/D,OAAOD,KAAKC,IAAMC,GAEpBiB,UAAW,WAAYnB,KAAKC,IAAMD,KAAKV,OAAOhD,QAC9C8E,OAAQ,SAASN,GACf,IAAIO,EAAQrB,KAAKV,OAAOO,QAAQiB,EAAId,KAAKC,KACzC,GAAIoB,GAAS,EAAsB,OAAlBrB,KAAKC,IAAMoB,GAAc,GAE5CC,OAAQ,SAASvC,GAAIiB,KAAKC,KAAOlB,GACjCwC,OAAQ,WAKN,OAJIvB,KAAKG,cAAgBH,KAAKE,QAC5BF,KAAKI,gBAAkBf,EAAYW,KAAKV,OAAQU,KAAKE,MAAOF,KAAKR,QAASQ,KAAKG,cAAeH,KAAKI,iBACnGJ,KAAKG,cAAgBH,KAAKE,OAErBF,KAAKI,iBAAmBJ,KAAKK,UAAYhB,EAAYW,KAAKV,OAAQU,KAAKK,UAAWL,KAAKR,SAAW,IAE3GgC,YAAa,WACX,OAAOnC,EAAYW,KAAKV,OAAQ,KAAMU,KAAKR,UACxCQ,KAAKK,UAAYhB,EAAYW,KAAKV,OAAQU,KAAKK,UAAWL,KAAKR,SAAW,IAE/EqB,MAAO,SAASY,EAASC,EAASC,GAChC,GAAsB,iBAAXF,EAOJ,CACL,IAAIZ,EAAQb,KAAKV,OAAOsC,MAAM5B,KAAKC,KAAKY,MAAMY,GAC9C,OAAIZ,GAASA,EAAMgB,MAAQ,EAAU,MACjChB,IAAqB,IAAZa,IAAmB1B,KAAKC,KAAOY,EAAM,GAAGvE,QAC9CuE,GAVP,IAAIiB,EAAQ,SAASC,GAAM,OAAOJ,EAAkBI,EAAIC,cAAgBD,GAExE,GAAID,EADS9B,KAAKV,OAAO2C,OAAOjC,KAAKC,IAAKwB,EAAQnF,UAC7BwF,EAAML,GAEzB,OADgB,IAAZC,IAAmB1B,KAAKC,KAAOwB,EAAQnF,SACpC,GASb4F,QAAS,WAAW,OAAOlC,KAAKV,OAAOsC,MAAM5B,KAAKE,MAAOF,KAAKC,MAC9DkC,eAAgB,SAASpD,EAAGqD,GAC1BpC,KAAKK,WAAatB,EAClB,IAAM,OAAOqD,IACb,QAAUpC,KAAKK,WAAatB,IAE9BsD,UAAW,SAAStD,GAClB,IAAIuD,EAAOtC,KAAKD,QAAQuC,KAAOvD,EAC/B,OAAOuD,GAAQtC,KAAKD,QAAQwC,MAAMjG,OAAS,KAAO0D,KAAKD,QAAQwC,MAAMD,KAGzE3F,EAAQmD,aAAeA,EAEvBnD,EAAQ6F,WAAa,SAAS/D,EAAMgE,EAAIC,GACtC,OAAOjE,EAAK+D,YAAa/D,EAAK+D,WAAWC,EAAIC,IAG/C,IAAIC,EAAQhG,EAAQgG,MAAQ,GAAIC,EAAYjG,EAAQiG,UAAY,GAChEjG,EAAQkG,WAAa,SAAShF,EAAMY,GAC9BqE,UAAUxG,OAAS,IACrBmC,EAAKsE,aAAeC,MAAM9D,UAAU0C,MAAM7E,KAAK+F,UAAW,IAC5DH,EAAM9E,GAAQY,GAEhB9B,EAAQsG,WAAa,SAASC,EAAMC,GAAQP,EAAUM,GAAQC,GAE9DxG,EAAQkG,WAAW,QAAQ,WACzB,MAAO,CAACO,MAAO,SAASC,GAASA,EAAOlC,iBAE1CxE,EAAQsG,WAAW,aAAc,QAEjCtG,EAAQ2G,YAAc,SAASH,GAM7B,MALmB,iBAARA,GAAoBP,EAAUzD,eAAegE,GACtDA,EAAOP,EAAUO,GACRA,GAA4B,iBAAbA,EAAKtF,MAAoB+E,EAAUzD,eAAegE,EAAKtF,QAC/EsF,EAAOP,EAAUO,EAAKtF,OAEL,iBAARsF,EAAyB,CAACtF,KAAMsF,GAC/BA,GAAQ,CAACtF,KAAM,SAa7B,IAAI0F,EAAiB5G,EAAQ4G,eAAiB,GAC9C5G,EAAQ6G,WAAa,SAAS/E,EAAMgF,IAXpC,SAAiBC,EAAKC,EAAQC,GAE5B,IAAK,IAAIC,KADJF,IAAQA,EAAS,IACLD,GACXA,EAAIvE,eAAe0E,KAAwB,IAAdD,GAAwBD,EAAOxE,eAAe0E,KAC7EF,EAAOE,GAAQH,EAAIG,IASvBC,CAAQL,EADGF,EAAepE,eAAeV,GAAQ8E,EAAe9E,GAAS8E,EAAe9E,GAAQ,KAIlG9B,EAAQoH,QAAU,SAASC,EAASb,GAC9BA,EAAOxG,EAAQ2G,YAAYH,GAA/B,IACIc,EAAWtB,EAAMQ,EAAKtF,MAC1B,IAAKoG,EAAU,OAAOtH,EAAQoH,QAAQC,EAAS,cAC/C,IAAIE,EAAUD,EAASD,EAASb,GAChC,GAAII,EAAepE,eAAegE,EAAKtF,MAAO,CAC5C,IAAIsG,EAAOZ,EAAeJ,EAAKtF,MAC/B,IAAK,IAAIgG,KAAQM,EACVA,EAAKhF,eAAe0E,KACrBK,EAAQ/E,eAAe0E,KAAOK,EAAQ,IAAML,GAAQK,EAAQL,IAChEK,EAAQL,GAAQM,EAAKN,IAKzB,GAFAK,EAAQrG,KAAOsF,EAAKtF,KAChBsF,EAAKiB,aAAYF,EAAQE,WAAajB,EAAKiB,YAC3CjB,EAAKkB,UAAW,IAAK,IAAIR,KAAQV,EAAKkB,UACxCH,EAAQL,GAAQV,EAAKkB,UAAUR,GAEjC,OAAOK,GAGTvH,EAAQ2H,UAAY,SAAS7F,EAAM8F,GAEjC,IADA,IAAIC,EACG/F,EAAK6F,YACVE,EAAO/F,EAAK6F,UAAUC,KACTC,EAAK/F,MAAQA,GAC1B8F,EAAQC,EAAKD,MACb9F,EAAO+F,EAAK/F,KAEd,OAAO+F,GAAQ,CAAC/F,KAAMA,EAAM8F,MAAOA,IAGrC5H,EAAQ8H,eAAiB9H,EAAQ+H,qBAAuBC,KAAKC,IAE7DjI,EAAQkI,QAAU,SAASvF,EAAQwF,EAAUC,EAAUf,GAIrD,IAHA,IAAIvF,EAAO9B,EAAQoH,QAAQ,CAACiB,WAAY,GAAIF,GACxCvC,EAhLN,SAAoBjD,GAAQ,OAAOA,EAAO2F,MAAM,YAgLlCC,CAAW5F,GAASiF,EAASP,GAAWA,EAAQO,OAAU5H,EAAQ6F,WAAW/D,GACrFsB,EAAU,CAACwC,MAAOA,EAAOD,KAAM,GAC1BzF,EAAI,EAAGG,EAAIuF,EAAMjG,OAAQO,EAAIG,IAAKH,IAAKkD,EAAQuC,KAAM,CACxDzF,GAAGkI,EAAS,MAChB,IAAI1B,EAAS,IAAI1G,EAAQmD,aAAayC,EAAM1F,GAAI,EAAGkD,GAEnD,KADKsD,EAAO/D,QAAUb,EAAK0G,WAAW1G,EAAK0G,UAAUZ,IAC7ClB,EAAO/C,OAAO,CACpB,IAAI8E,EAAQ3G,EAAK2E,MAAMC,EAAQkB,GAC/BQ,EAAS1B,EAAOnB,UAAWkD,EAAOvI,EAAGwG,EAAOnD,MAAOqE,GACnDlB,EAAOnD,MAAQmD,EAAOpD,OAK5B,IAA6B,GAA4B,IAA6B,GACtF,IAA6B,GAAmC,IAA6B,I,+CC1J7F,MAAMoF,EAAiD,CACrD,CACEC,QAAS,IAAM,gDACfC,SAAU,CACR,MAAO,kBACP,MAAO,kBACP,QAAS,qBAGb,CACED,QAAS,IAAM,kDACfC,SAAU,CACR,UAAW,wBAGf,CACED,QAAS,IAAM,gGACfC,SAAU,CACR,OAAQ,sBACR,OAAQ,aAGZ,CACED,QAAS,IAAM,qHACfC,SAAU,CACR,QAAS,YACT,OAAQ,cAGZ,CACED,QAAS,IAAM,6JACfC,SAAU,CACR,OAAQ,sBAGZ,CACED,QAAS,IAAM,yCACfC,SAAU,CACR,OAAQ,WACR,QAAS,cACT,QAAS,gBAGb,CACED,QAAS,IAAM,wPACfC,SAAU,CACR,OAAQ,eAGZ,CACED,QAAS,IAAM,4FACfC,SAAU,CACR,YAAa,kBACb,MAAO,oBAGX,CACED,QAAS,IAAM,2CACfC,SAAU,CACR,QAAS,YACT,OAAQ,cAGZ,CACED,QAAS,IAAM,yCACfC,SAAU,CACR,OAAQ,WACR,QAAS,WACT,UAAW,WACX,UAAW,WACX,WAAY,WACZ,UAAW,WACX,OAAQ,WACR,QAAS,aAGb,CACED,QAAS,IAAM,2CACfC,SAAU,CACR,KAAM,oBACN,SAAU,eACV,MAAO,eACP,MAAO,gBACP,QAAS,gBACT,QAAS,cACT,KAAM,WACN,KAAM,WACN,OAAQ,gBACR,OAAQ,gBACR,MAAO,kBAGX,CACED,QAAS,IAAM,6CACfC,SAAU,CACR,MAAO,eACP,MAAO,gBACP,OAAQ,gBACR,OAAQ,kBAGZ,CACED,QAAS,IAAM,4CACfC,SAAU,CACR,SAAU,iBAGd,CACED,QAAS,IAAM,4CACfC,SAAU,CACR,MAAO,cAGX,CACED,QAAS,IAAM,0CACfC,SAAU,CACR,OAAQ,eAGZ,CACED,QAAS,IAAM,6CACfC,SAAU,CACR,OAAQ,+BAGZ,CACED,QAAS,IAAM,yCACfC,SAAU,CACR,MAAO,cAGX,CACED,QAAS,IAAM,2CACfC,SAAU,CACR,MAAO,gBAGX,CACED,QAAS,IAAM,wJACfC,SAAU,CACR,OAAQ,4BAGZ,CACED,QAAS,IAAM,6CACfC,SAAU,CACR,MAAO,kBAGX,CACED,QAAS,IAAM,2CACfC,SAAU,CACR,MAAO,gBAGX,CACED,QAAS,IAAM,8CACfC,SAAU,CACR,OAAQ,iBACR,QAAS,iBACT,QAAS,iBACT,OAAQ,mBAGZ,CACED,QAAS,IAAM,wEACfC,SAAU,CACR,MAAO,mBAGX,CACED,QAAS,IAAM,wCACfC,SAAU,CACR,MAAO,gBACP,OAAQ,kBAGZ,CACED,QAAS,IAAM,2CACfC,SAAU,CACR,MAAO,gBAGX,CACED,QAAS,IAAM,wCACfC,SAAU,CACR,KAAM,gBAGV,CACED,QAAS,IAAM,iDACfC,SAAU,CACR,OAAQ,6BAGZ,CACED,QAAS,IAAM,yCACfC,SAAU,CACR,MAAO,cAGX,CACED,QAAS,IAAM,8CACfC,SAAU,CACR,KAAM,iBACN,OAAQ,mBAGZ,CACED,QAAS,IAAM,0CACfC,SAAU,CACR,OAAQ,eAGZ,CACED,QAAS,IAAM,8CACfC,SAAU,CACR,MAAO,mBAGX,CACED,QAAS,IAAM,4CACfC,SAAU,CACR,MAAO,iBAGX,CACED,QAAS,IAAM,2CACfC,SAAU,CACR,OAAQ,gBAGZ,CACED,QAAS,IAAM,6CACfC,SAAU,CACR,MAAO,6BAGX,CACED,QAAS,IAAM,4CACfC,SAAU,CACR,QAAS,gBAGb,CACED,QAAS,IAAM,sIACfC,SAAU,CACR,OAAQ,eAGZ,CACED,QAAS,IAAM,gDACfC,SAAU,CACR,MAAO,iBAGX,CACED,QAAS,IAAM,wJACfC,SAAU,CACR,QAAS,uBAGb,CACED,QAAS,IAAM,4CACfC,SAAU,CACR,SAAU,sBAGd,CACED,QAAS,IAAM,6CACfC,SAAU,CACR,MAAO,gBACP,OAAQ,gBACR,OAAQ,kBAGZ,CACED,QAAS,IAAM,2GACfC,SAAU,CACR,OAAQ,eAGZ,CACED,QAAS,IAAM,0CACfC,SAAU,CACR,OAAQ,oBAGZ,CACED,QAAS,IAAM,wCACfC,SAAU,CACR,KAAM,aAGV,CACED,QAAS,IAAM,6CACfC,SAAU,CACR,MAAO,kBAGX,CACED,QAAS,IAAM,qIACfC,SAAU,CACR,OAAQ,eAGZ,CACED,QAAS,IAAM,+CACfC,SAAU,CACR,SAAU,oBAGd,CACED,QAAS,IAAM,iDACfC,SAAU,CACR,cAAe,oBACf,iBAAkB,oBAClB,aAAc,oBACd,gBAAiB,oBACjB,OAAQ,eAGZ,CACED,QAAS,IAAM,0CACfC,SAAU,CACR,OAAQ,eAGZ,CACED,QAAS,IAAM,iDACfC,SAAU,CACR,OAAQ,oBAGZ,CACED,QAAS,IAAM,yCACfC,SAAU,CACR,MAAO,cAGX,CACED,QAAS,IAAM,6CACfC,SAAU,CACR,OAAQ,mBAURC,EAAmB,IAAIC,IAMvBC,EAAgD,CACpD,CACEJ,QAAS,IAAM,8EACfC,SAAU,CACRI,WAAY,uBAUZC,EAAkB,IAAIH,IAOtBI,EAAc,IAAIJ,IAExB,IAAK,MAAMK,KAAiBT,EAC1B,IAAK,MAAOU,EAASC,KAAahI,OAAOiI,QAAQH,EAAcP,UAC7DC,EAAiBU,IAAIH,EAASC,GAC9BH,EAAYK,IAAIF,EAAUF,GAI9B,IAAK,MAAMK,KAAgBT,EACzB,IAAK,MAAOK,EAASC,KAAahI,OAAOiI,QAAQE,EAAaZ,UAC5DK,EAAgBM,IAAIH,EAASC,GAC7BH,EAAYK,IAAIF,EAAUG,GA2D9B,SAASC,EAAY3H,GACnB,MAAMZ,EAAQY,EAAaZ,KAC3B,OAAOA,GAAwB,iBAATA,EAAoBA,EAAO,KAQnD,SAASwI,EACP5H,EACA8F,GAEA,MAAMnC,EAAQ,oBAAU3D,EAAM8F,GAC9B,OAAOnC,GAASA,EAAM3D,KAAO2H,EAAYhE,EAAM3D,MAAQ,KAyBzD,SAAS6H,EACP7H,EACA4E,EACAkB,EACAgC,GAEA,IAAK,IAAI1J,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAM2J,EAAgBD,EAAeF,EAAiB5H,EAAM8F,GAAS,KAC/DnB,EAAQ3E,EAAK2E,MAAMC,EAAQkB,GAEjC,GAAIlB,EAAOpD,IAAMoD,EAAOnD,MACtB,OAAOkD,GAASoD,EAAgB,KAAKA,KAAiBpD,IAAUA,EAIpE,MAAM,IAAIqD,MAAM,QAAQL,EAAY3H,gCAGtCiI,UAAYC,UACV,MAAMC,EAAUC,EAAGC,KAEbtH,EAAUoH,EAAQpH,SAAW,EAC7BuH,EAAWH,EAAQG,SACnBR,GAAwC,IAAzBK,EAAQL,aAEvB9H,QAxFRkI,eACEC,GAEA,MAAMZ,EACJR,EAAiBrH,IAAIyI,EAAQI,UAAUhF,gBACvC4D,EAAgBzH,IAAIyI,EAAQK,SAASjF,gBArCzC,SAAuB+E,GACrB,GAAIA,EAASG,WAAW,SACtB,MAAO,WAGT,GAAIH,EAASG,WAAW,MAAO,CAC7B,MAAMxJ,EAAI,uDAAuDyJ,KAC/DJ,GAGF,GAAIrJ,EAAG,CACL,OAAQA,EAAE,IACR,IAAK,UACH,MAAO,kBACT,IAAK,OACH,MAAO,kBACT,IAAK,KACL,IAAK,OACH,MAAO,YACT,IAAK,OACH,MAAO,cAGX,GAAIA,EAAE,GAAGwJ,WAAW,UAClB,MAAO,iBAKb,OAAO,KASLE,CAAcR,EAAQG,UAExB,IAAKf,EACH,OAAO,KAGT,MAAMqB,EAAiBxB,EAAY1H,IAAI6H,GAEvC,YAAuBtF,IAAnB2G,EACK,YAGHA,EAAe/B,UAEd,kBAAQ,GAAIU,IAAa,MAoEbsB,CAAWV,GAE9B,IAAKnI,EAEH,YADA8I,YAAY,IAId,MAAMC,EACJZ,EAAQrE,OAASqE,EAAQrE,MAAMjG,OAC3B,IAAImL,IAAYb,EAAQrE,OACxB,KAIAmF,EAAUF,EAAa7C,KAAKgD,OAAOH,GAAc,KAEjDjF,EAAQwE,EAAS9B,MAAM,SACvBV,EAAa9F,EAAK+D,WAAa/D,EAAK+D,aAAe,KAEnDoF,EAAkB,GAExB,IAAK,MAAOC,EAAIvF,KAASC,EAAM0D,UAAW,CAExC,GAAgB,OAAZyB,GAAoBG,EAAKH,EAC3B,MAKF,GAAIF,IAAejD,IACZiD,EAAWM,IAAID,GAClB,SAIJ,IAAKvF,EAAKhG,OAAQ,CACZmC,EAAK0G,WACP1G,EAAK0G,UAAUZ,GAGjB,SAGF,MAAMwD,EAAU,CAAExF,QAAOD,KAAMuF,GACzBG,EAAa,IAAI,eAAa1F,EAAM9C,EAASuI,GAEnD,MAAQC,EAAW1H,OAAO,CACxB,MAAM8C,EAAQkD,EAAU7H,EAAMuJ,EAAYzD,EAAOgC,IAE7CnD,GAAWoE,IAAcA,EAAWM,IAAID,KAC1CD,EAAOC,GAAMD,EAAOC,IAAO,GAC3BD,EAAOC,GAAIG,EAAW9H,OAAS,CAC7B5D,OAAQ0L,EAAW/H,IAAM+H,EAAW9H,MACpCkD,UAIJ4E,EAAW9H,MAAQ8H,EAAW/H,KAIlCsH,YAAYK","file":"highlighter.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"highlighter\": 1\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(__webpack_require__.p + \"highlighter/\" + ({\"common\":\"common\",\"mode/dockerfile\":\"mode/dockerfile\",\"mode/python\":\"mode/python\",\"mode/stex\":\"mode/stex\",\"mode/rst\":\"mode/rst\",\"mode/rust\":\"mode/rust\",\"ext/elixir\":\"ext/elixir\",\"mode/asciiarmor\":\"mode/asciiarmor\",\"mode/clike\":\"mode/clike\",\"mode/clojure\":\"mode/clojure\",\"mode/coffeescript\":\"mode/coffeescript\",\"mode/crystal\":\"mode/crystal\",\"mode/css\":\"mode/css\",\"mode/cypher\":\"mode/cypher\",\"mode/fortran\":\"mode/fortran\",\"mode/go\":\"mode/go\",\"mode/haxe\":\"mode/haxe\",\"mode/javascript\":\"mode/javascript\",\"mode/julia\":\"mode/julia\",\"mode/lua\":\"mode/lua\",\"mode/mllike\":\"mode/mllike\",\"mode/oz\":\"mode/oz\",\"mode/pascal\":\"mode/pascal\",\"mode/perl\":\"mode/perl\",\"mode/pig\":\"mode/pig\",\"mode/powershell\":\"mode/powershell\",\"mode/properties\":\"mode/properties\",\"mode/protobuf\":\"mode/protobuf\",\"mode/puppet\":\"mode/puppet\",\"mode/q\":\"mode/q\",\"mode/r\":\"mode/r\",\"mode/rpm\":\"mode/rpm\",\"mode/ruby\":\"mode/ruby\",\"mode/scheme\":\"mode/scheme\",\"mode/shell\":\"mode/shell\",\"mode/sieve\":\"mode/sieve\",\"mode/smalltalk\":\"mode/smalltalk\",\"mode/sparql\":\"mode/sparql\",\"mode/sql\":\"mode/sql\",\"mode/stylus\":\"mode/stylus\",\"mode/swift\":\"mode/swift\",\"mode/vb\":\"mode/vb\",\"mode/xml\":\"mode/xml\",\"mode/markdown\":\"mode/markdown\",\"mode/htmlmixed\":\"mode/htmlmixed\",\"mode/pug\":\"mode/pug\",\"mode/handlebars\":\"mode/handlebars\",\"mode/sass\":\"mode/sass\",\"mode/vue\":\"mode/vue\",\"mode/htmlembedded\":\"mode/htmlembedded\",\"mode/php\":\"mode/php\",\"mode/slim\":\"mode/slim\",\"mode/soy\":\"mode/soy\",\"mode/jsx\":\"mode/jsx\",\"mode/yaml\":\"mode/yaml\"}[chunkId]||chunkId) + \".js\");\n \t\t\t}\n \t\t}));\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/* Just enough of CodeMirror to run runMode under node.js */\n\nfunction splitLines(string){return string.split(/\\r\\n?|\\n/);};\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nvar countColumn = exports.countColumn = function(string, end, tabSize, startIndex, startValue) {\n  if (end == null) {\n    end = string.search(/[^\\s\\u00a0]/);\n    if (end == -1) end = string.length;\n  }\n  for (var i = startIndex || 0, n = startValue || 0;;) {\n    var nextTab = string.indexOf(\"\\t\", i);\n    if (nextTab < 0 || nextTab >= end)\n      return n + (end - i);\n    n += nextTab - i;\n    n += tabSize - (n % tabSize);\n    i = nextTab + 1;\n  }\n};\n\nfunction StringStream(string, tabSize, context) {\n  this.pos = this.start = 0;\n  this.string = string;\n  this.tabSize = tabSize || 8;\n  this.lastColumnPos = this.lastColumnValue = 0;\n  this.lineStart = 0;\n  this.context = context\n};\n\nStringStream.prototype = {\n  eol: function() {return this.pos >= this.string.length;},\n  sol: function() {return this.pos == this.lineStart;},\n  peek: function() {return this.string.charAt(this.pos) || undefined;},\n  next: function() {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++);\n  },\n  eat: function(match) {\n    var ch = this.string.charAt(this.pos);\n    if (typeof match == \"string\") var ok = ch == match;\n    else var ok = ch && (match.test ? match.test(ch) : match(ch));\n    if (ok) {++this.pos; return ch;}\n  },\n  eatWhile: function(match) {\n    var start = this.pos;\n    while (this.eat(match)){}\n    return this.pos > start;\n  },\n  eatSpace: function() {\n    var start = this.pos;\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos;\n    return this.pos > start;\n  },\n  skipToEnd: function() {this.pos = this.string.length;},\n  skipTo: function(ch) {\n    var found = this.string.indexOf(ch, this.pos);\n    if (found > -1) {this.pos = found; return true;}\n  },\n  backUp: function(n) {this.pos -= n;},\n  column: function() {\n    if (this.lastColumnPos < this.start) {\n      this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n      this.lastColumnPos = this.start;\n    }\n    return this.lastColumnValue - (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0);\n  },\n  indentation: function() {\n    return countColumn(this.string, null, this.tabSize) -\n      (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0);\n  },\n  match: function(pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\n      var substr = this.string.substr(this.pos, pattern.length);\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length;\n        return true;\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) return null;\n      if (match && consume !== false) this.pos += match[0].length;\n      return match;\n    }\n  },\n  current: function(){return this.string.slice(this.start, this.pos);},\n  hideFirstChars: function(n, inner) {\n    this.lineStart += n;\n    try { return inner(); }\n    finally { this.lineStart -= n; }\n  },\n  lookAhead: function(n) {\n    var line = this.context.line + n\n    return line >= this.context.lines.length ? null : this.context.lines[line]\n  }\n};\nexports.StringStream = StringStream;\n\nexports.startState = function(mode, a1, a2) {\n  return mode.startState ? mode.startState(a1, a2) : true;\n};\n\nvar modes = exports.modes = {}, mimeModes = exports.mimeModes = {};\nexports.defineMode = function(name, mode) {\n  if (arguments.length > 2)\n    mode.dependencies = Array.prototype.slice.call(arguments, 2);\n  modes[name] = mode;\n};\nexports.defineMIME = function(mime, spec) { mimeModes[mime] = spec; };\n\nexports.defineMode(\"null\", function() {\n  return {token: function(stream) {stream.skipToEnd();}};\n});\nexports.defineMIME(\"text/plain\", \"null\");\n\nexports.resolveMode = function(spec) {\n  if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\n    spec = mimeModes[spec];\n  } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\n    spec = mimeModes[spec.name];\n  }\n  if (typeof spec == \"string\") return {name: spec};\n  else return spec || {name: \"null\"};\n};\n\nfunction copyObj(obj, target, overwrite) {\n  if (!target) target = {};\n  for (var prop in obj)\n    if (obj.hasOwnProperty(prop) && (overwrite !== false || !target.hasOwnProperty(prop)))\n      target[prop] = obj[prop];\n  return target;\n}\n\n// This can be used to attach properties to mode objects from\n// outside the actual mode definition.\nvar modeExtensions = exports.modeExtensions = {};\nexports.extendMode = function(mode, properties) {\n  var exts = modeExtensions.hasOwnProperty(mode) ? modeExtensions[mode] : (modeExtensions[mode] = {});\n  copyObj(properties, exts);\n};\n\nexports.getMode = function(options, spec) {\n  var spec = exports.resolveMode(spec);\n  var mfactory = modes[spec.name];\n  if (!mfactory) return exports.getMode(options, \"text/plain\");\n  var modeObj = mfactory(options, spec);\n  if (modeExtensions.hasOwnProperty(spec.name)) {\n    var exts = modeExtensions[spec.name];\n    for (var prop in exts) {\n      if (!exts.hasOwnProperty(prop)) continue;\n      if (modeObj.hasOwnProperty(prop)) modeObj[\"_\" + prop] = modeObj[prop];\n      modeObj[prop] = exts[prop];\n    }\n  }\n  modeObj.name = spec.name;\n  if (spec.helperType) modeObj.helperType = spec.helperType;\n  if (spec.modeProps) for (var prop in spec.modeProps)\n    modeObj[prop] = spec.modeProps[prop];\n\n  return modeObj;\n};\n\nexports.innerMode = function(mode, state) {\n  var info;\n  while (mode.innerMode) {\n    info = mode.innerMode(state);\n    if (!info || info.mode == mode) break;\n    state = info.state;\n    mode = info.mode;\n  }\n  return info || {mode: mode, state: state};\n}\n\nexports.registerHelper = exports.registerGlobalHelper = Math.min;\n\nexports.runMode = function(string, modespec, callback, options) {\n  var mode = exports.getMode({indentUnit: 2}, modespec);\n  var lines = splitLines(string), state = (options && options.state) || exports.startState(mode);\n  var context = {lines: lines, line: 0}\n  for (var i = 0, e = lines.length; i < e; ++i, ++context.line) {\n    if (i) callback(\"\\n\");\n    var stream = new exports.StringStream(lines[i], 4, context);\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n\nrequire.cache[require.resolve(\"../../lib/codemirror\")] = require.cache[require.resolve(\"./runmode.node\")];\nrequire.cache[require.resolve(\"../../addon/runmode/runmode\")] = require.cache[require.resolve(\"./runmode.node\")];\n","/// <reference path=\"./globals.d.ts\" />\n\n// This doesn't import all of CodeMirror, instead it only imports\n// a small subset. This hack is brought to you by webpack and you\n// can read all about it in webpack.common.js.\nimport {\n  getMode,\n  innerMode,\n  StringStream,\n} from 'codemirror/addon/runmode/runmode.node.js'\n\nimport { ITokens, IHighlightRequest } from '../lib/highlighter/types'\n\n/**\n * A mode definition object is used to map a certain file\n * extension to a mode loader (see the documentation for\n * the install property).\n */\ninterface IModeDefinition {\n  /**\n   * A function that, when called, will attempt to asynchronously\n   * load the required modules for a particular mode. This function\n   * is idempotent and can be called multiple times with no adverse\n   * effect.\n   */\n  readonly install: () => Promise<void>\n\n  /**\n   * A map between file extensions (including the leading dot, i.e.\n   * \".jpeg\") or basenames (i.e. \"dockerfile\") and the selected mime\n   * type to use when highlighting that extension as specified in\n   * the CodeMirror mode itself.\n   */\n  readonly mappings: {\n    readonly [key: string]: string\n  }\n}\n\n/**\n * Array describing all currently supported extensionModes and the file extensions\n * that they cover.\n */\nconst extensionModes: ReadonlyArray<IModeDefinition> = [\n  {\n    install: () => import('codemirror/mode/javascript/javascript'),\n    mappings: {\n      '.ts': 'text/typescript',\n      '.js': 'text/javascript',\n      '.json': 'application/json',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/coffeescript/coffeescript'),\n    mappings: {\n      '.coffee': 'text/x-coffeescript',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/jsx/jsx'),\n    mappings: {\n      '.tsx': 'text/typescript-jsx',\n      '.jsx': 'text/jsx',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/htmlmixed/htmlmixed'),\n    mappings: {\n      '.html': 'text/html',\n      '.htm': 'text/html',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/htmlembedded/htmlembedded'),\n    mappings: {\n      '.jsp': 'application/x-jsp',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/css/css'),\n    mappings: {\n      '.css': 'text/css',\n      '.scss': 'text/x-scss',\n      '.less': 'text/x-less',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/vue/vue'),\n    mappings: {\n      '.vue': 'text/x-vue',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/markdown/markdown'),\n    mappings: {\n      '.markdown': 'text/x-markdown',\n      '.md': 'text/x-markdown',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/yaml/yaml'),\n    mappings: {\n      '.yaml': 'text/yaml',\n      '.yml': 'text/yaml',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/xml/xml'),\n    mappings: {\n      '.xml': 'text/xml',\n      '.xaml': 'text/xml',\n      '.csproj': 'text/xml',\n      '.fsproj': 'text/xml',\n      '.vcxproj': 'text/xml',\n      '.vbproj': 'text/xml',\n      '.svg': 'text/xml',\n      '.resx': 'text/xml',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/clike/clike'),\n    mappings: {\n      '.m': 'text/x-objectivec',\n      '.scala': 'text/x-scala',\n      '.sc': 'text/x-scala',\n      '.cs': 'text/x-csharp',\n      '.cake': 'text/x-csharp',\n      '.java': 'text/x-java',\n      '.c': 'text/x-c',\n      '.h': 'text/x-c',\n      '.cpp': 'text/x-c++src',\n      '.hpp': 'text/x-c++src',\n      '.kt': 'text/x-kotlin',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/mllike/mllike'),\n    mappings: {\n      '.ml': 'text/x-ocaml',\n      '.fs': 'text/x-fsharp',\n      '.fsx': 'text/x-fsharp',\n      '.fsi': 'text/x-fsharp',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/swift/swift'),\n    mappings: {\n      '.swift': 'text/x-swift',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/shell/shell'),\n    mappings: {\n      '.sh': 'text/x-sh',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/sql/sql'),\n    mappings: {\n      '.sql': 'text/x-sql',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/cypher/cypher'),\n    mappings: {\n      '.cql': 'application/x-cypher-query',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/go/go'),\n    mappings: {\n      '.go': 'text/x-go',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/perl/perl'),\n    mappings: {\n      '.pl': 'text/x-perl',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/php/php'),\n    mappings: {\n      '.php': 'application/x-httpd-php',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/python/python'),\n    mappings: {\n      '.py': 'text/x-python',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/ruby/ruby'),\n    mappings: {\n      '.rb': 'text/x-ruby',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/clojure/clojure'),\n    mappings: {\n      '.clj': 'text/x-clojure',\n      '.cljc': 'text/x-clojure',\n      '.cljs': 'text/x-clojure',\n      '.edn': 'text/x-clojure',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/rust/rust'),\n    mappings: {\n      '.rs': 'text/x-rustsrc',\n    },\n  },\n  {\n    install: () => import('codemirror-mode-elixir'),\n    mappings: {\n      '.ex': 'text/x-elixir',\n      '.exs': 'text/x-elixir',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/haxe/haxe'),\n    mappings: {\n      '.hx': 'text/x-haxe',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/r/r'),\n    mappings: {\n      '.r': 'text/x-rsrc',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/powershell/powershell'),\n    mappings: {\n      '.ps1': 'application/x-powershell',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/vb/vb'),\n    mappings: {\n      '.vb': 'text/x-vb',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/fortran/fortran'),\n    mappings: {\n      '.f': 'text/x-fortran',\n      '.f90': 'text/x-fortran',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/lua/lua'),\n    mappings: {\n      '.lua': 'text/x-lua',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/crystal/crystal'),\n    mappings: {\n      '.cr': 'text/x-crystal',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/julia/julia'),\n    mappings: {\n      '.jl': 'text/x-julia',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/stex/stex'),\n    mappings: {\n      '.tex': 'text/x-stex',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/sparql/sparql'),\n    mappings: {\n      '.rq': 'application/sparql-query',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/stylus/stylus'),\n    mappings: {\n      '.styl': 'text/x-styl',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/soy/soy'),\n    mappings: {\n      '.soy': 'text/x-soy',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/smalltalk/smalltalk'),\n    mappings: {\n      '.st': 'text/x-stsrc',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/slim/slim'),\n    mappings: {\n      '.slim': 'application/x-slim',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/sieve/sieve'),\n    mappings: {\n      '.sieve': 'application/sieve',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/scheme/scheme'),\n    mappings: {\n      '.ss': 'text/x-scheme',\n      '.sls': 'text/x-scheme',\n      '.scm': 'text/x-scheme',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/rst/rst'),\n    mappings: {\n      '.rst': 'text/x-rst',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/rpm/rpm'),\n    mappings: {\n      '.rpm': 'text/x-rpm-spec',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/q/q'),\n    mappings: {\n      '.q': 'text/x-q',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/puppet/puppet'),\n    mappings: {\n      '.pp': 'text/x-puppet',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/pug/pug'),\n    mappings: {\n      '.pug': 'text/x-pug',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/protobuf/protobuf'),\n    mappings: {\n      '.proto': 'text/x-protobuf',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/properties/properties'),\n    mappings: {\n      '.properties': 'text/x-properties',\n      '.gitattributes': 'text/x-properties',\n      '.gitignore': 'text/x-properties',\n      '.editorconfig': 'text/x-properties',\n      '.ini': 'text/x-ini',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/pig/pig'),\n    mappings: {\n      '.pig': 'text/x-pig',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/asciiarmor/asciiarmor'),\n    mappings: {\n      '.pgp': 'application/pgp',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/oz/oz'),\n    mappings: {\n      '.oz': 'text/x-oz',\n    },\n  },\n  {\n    install: () => import('codemirror/mode/pascal/pascal'),\n    mappings: {\n      '.pas': 'text/x-pascal',\n    },\n  },\n]\n\n/**\n * A map between file extensions and mime types, see\n * the 'mappings' property on the IModeDefinition interface\n * for more information\n */\nconst extensionMIMEMap = new Map<string, string>()\n\n/**\n * Array describing all currently supported basenameModes and the file names\n * that they cover.\n */\nconst basenameModes: ReadonlyArray<IModeDefinition> = [\n  {\n    install: () => import('codemirror/mode/dockerfile/dockerfile'),\n    mappings: {\n      dockerfile: 'text/x-dockerfile',\n    },\n  },\n]\n\n/**\n * A map between file basenames and mime types, see\n * the 'basenames' property on the IModeDefinition interface\n * for more information\n */\nconst basenameMIMEMap = new Map<string, string>()\n\n/**\n * A map between mime types and mode definitions. See the\n * documentation for the IModeDefinition interface\n * for more information\n */\nconst mimeModeMap = new Map<string, IModeDefinition>()\n\nfor (const extensionMode of extensionModes) {\n  for (const [mapping, mimeType] of Object.entries(extensionMode.mappings)) {\n    extensionMIMEMap.set(mapping, mimeType)\n    mimeModeMap.set(mimeType, extensionMode)\n  }\n}\n\nfor (const basenameMode of basenameModes) {\n  for (const [mapping, mimeType] of Object.entries(basenameMode.mappings)) {\n    basenameMIMEMap.set(mapping, mimeType)\n    mimeModeMap.set(mimeType, basenameMode)\n  }\n}\n\nfunction guessMimeType(contents: string) {\n  if (contents.startsWith('<?xml')) {\n    return 'text/xml'\n  }\n\n  if (contents.startsWith('#!')) {\n    const m = /^#!.*?(ts-node|node|bash|sh|python(?:[\\d.]+)?)\\r?\\n/g.exec(\n      contents\n    )\n\n    if (m) {\n      switch (m[1]) {\n        case 'ts-node':\n          return 'text/typescript'\n        case 'node':\n          return 'text/javascript'\n        case 'sh':\n        case 'bash':\n          return 'text/x-sh'\n        case 'perl':\n          return 'text/x-perl'\n      }\n\n      if (m[1].startsWith('python')) {\n        return 'text/x-python'\n      }\n    }\n  }\n\n  return null\n}\n\nasync function detectMode(\n  request: IHighlightRequest\n): Promise<CodeMirror.Mode<{}> | null> {\n  const mimeType =\n    extensionMIMEMap.get(request.extension.toLowerCase()) ||\n    basenameMIMEMap.get(request.basename.toLowerCase()) ||\n    guessMimeType(request.contents)\n\n  if (!mimeType) {\n    return null\n  }\n\n  const modeDefinition = mimeModeMap.get(mimeType)\n\n  if (modeDefinition === undefined) {\n    return null\n  }\n\n  await modeDefinition.install()\n\n  return getMode({}, mimeType) || null\n}\n\nfunction getModeName(mode: CodeMirror.Mode<{}>): string | null {\n  const name = (mode as any).name\n  return name && typeof name === 'string' ? name : null\n}\n\n/**\n * Helper method to determine the name of the innermost (i.e. current)\n * mode. Think of this as an abstraction over CodeMirror's innerMode\n * with added type guards.\n */\nfunction getInnerModeName(\n  mode: CodeMirror.Mode<{}>,\n  state: any\n): string | null {\n  const inner = innerMode(mode, state)\n  return inner && inner.mode ? getModeName(inner.mode) : null\n}\n\n/**\n * Extract the next token from the line stream or null if no token\n * could be extracted from the current position in the line stream.\n *\n * This method is more or less equal to the readToken method in\n * CodeMirror but since the readToken class in CodeMirror isn't included\n * in the Node runmode we're not able to use it.\n *\n * Worth noting here is that we're also replicated the workaround for\n * modes that aren't adhering to the rules of never returning without\n * advancing the line stream by trying it again (up to ten times). See\n * https://github.com/codemirror/CodeMirror/commit/2c60a2 for more\n * details on that.\n *\n * @param mode         The current (outer) mode\n * @param stream       The StringStream for the current line\n * @param state        The current mode state (if any)\n * @param addModeClass Whether or not to append the current (inner) mode name\n *                     as an extra CSS clas to the token, indicating the mode\n *                     that produced it, prefixed with \"cm-m-\". For example,\n *                     tokens from the XML mode will get the cm-m-xml class.\n */\nfunction readToken(\n  mode: CodeMirror.Mode<{}>,\n  stream: StringStream,\n  state: any,\n  addModeClass: boolean\n): string | null {\n  for (let i = 0; i < 10; i++) {\n    const innerModeName = addModeClass ? getInnerModeName(mode, state) : null\n    const token = mode.token(stream, state)\n\n    if (stream.pos > stream.start) {\n      return token && innerModeName ? `m-${innerModeName} ${token}` : token\n    }\n  }\n\n  throw new Error(`Mode ${getModeName(mode)} failed to advance stream.`)\n}\n\nonmessage = async (ev: MessageEvent) => {\n  const request = ev.data as IHighlightRequest\n\n  const tabSize = request.tabSize || 4\n  const contents = request.contents\n  const addModeClass = request.addModeClass === true\n\n  const mode = await detectMode(request)\n\n  if (!mode) {\n    postMessage({})\n    return\n  }\n\n  const lineFilter =\n    request.lines && request.lines.length\n      ? new Set<number>(request.lines)\n      : null\n\n  // If we've got a set of requested lines we can keep track of the maximum\n  // line we need so that we can bail immediately when we've reached it.\n  const maxLine = lineFilter ? Math.max(...lineFilter) : null\n\n  const lines = contents.split(/\\r?\\n/)\n  const state: any = mode.startState ? mode.startState() : null\n\n  const tokens: ITokens = {}\n\n  for (const [ix, line] of lines.entries()) {\n    // No need to continue after the max line\n    if (maxLine !== null && ix > maxLine) {\n      break\n    }\n\n    // For stateless modes we can optimize by only running\n    // the tokenizer over lines we care about.\n    if (lineFilter && !state) {\n      if (!lineFilter.has(ix)) {\n        continue\n      }\n    }\n\n    if (!line.length) {\n      if (mode.blankLine) {\n        mode.blankLine(state)\n      }\n\n      continue\n    }\n\n    const lineCtx = { lines, line: ix }\n    const lineStream = new StringStream(line, tabSize, lineCtx)\n\n    while (!lineStream.eol()) {\n      const token = readToken(mode, lineStream, state, addModeClass)\n\n      if (token && (!lineFilter || lineFilter.has(ix))) {\n        tokens[ix] = tokens[ix] || {}\n        tokens[ix][lineStream.start] = {\n          length: lineStream.pos - lineStream.start,\n          token,\n        }\n      }\n\n      lineStream.start = lineStream.pos\n    }\n  }\n\n  postMessage(tokens)\n}\n"],"sourceRoot":""}